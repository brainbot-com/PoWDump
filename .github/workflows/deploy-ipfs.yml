name: Release and deploy to IPFS
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened

  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled'     
        required: false
        default: false

jobs:
  tag:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.github-tag-action.outputs.new_tag }}
      changelog: ${{ steps.github-tag-action.outputs.changelog }}
    steps:
      - uses: actions/checkout@v3
      - name: Bump and tag
        id: github-tag-action
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # new_tag is only set when there are new semver commits
          # on the release branch
          release_branches: main
          default_bump: false
          custom_release_rules: 'hotfix:patch:Hot Fixes,bug:patch:Bug Fixes,chore:patch:Chores'

  deploy-release:
    environment: 
      name: production
    needs: tag
    # only release when there is a new tag
    if: ${{ needs.tag.outputs.new_tag != null }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - name: Add .env files
        run: echo ${{secrets.ENV_WEBSITE_BASE64}} | base64 -d > ./packages/website/.env
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Build
        env:
          CI: true
        run: |
          yarn
          yarn workspace @package/dump-pow-contracts compile
          yarn workspace @package/dump-pow-website run build
          yarn workspace @package/dump-pow-website run export

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        # only start the session when enable via manual workflow trigger and the previous step failed
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled  &&  failure() }}
        timeout-minutes: 15
        with:
          limit-access-to-actor: true

      - name: Upload to IPFS pinning service (pinata.cloud)
        uses: aquiladev/ipfs-action@v0.2.1
        id: upload
        with:
          path: ./packages/website/out
          service: pinata
          pinName: powdump-release-${{ needs.tag.outputs.new_tag }}
          pinataKey: ${{ secrets.PINATA_KEY }}
          pinataSecret: ${{ secrets.PINATA_SECRET }}

      - name: Update _dnslink record
        run: >-
          doctl compute domain records update ${{ secrets.APP_DOMAIN }}
          --record-type TXT
          --record-id ${{ secrets.DO_RECORD_ID_DNSLINK }}
          --record-data dnslink=/ipfs/${{ steps.upload.outputs.cid}}
          --record-ttl 300

      - name: Convert CIDV0
        id: convert_cidv0
        uses: uniswap/convert-cidv0-cidv1@v1.0.0
        with:
          cidv0: ${{ steps.upload.outputs.cid }}

      - name: Release
        uses: actions/create-release@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.tag.outputs.new_tag }}
          release_name: Release ${{ needs.tag.outputs.new_tag }}
          body: |

            The latest release will be available at https://${{secrets.APP_SUBDOMAIN}}.${{ secrets.APP_DOMAIN }}
            Still, a specific app version can be directly accessed with your IPFS node or an IPFS gateway.

            IPFS hashes for this version:

            CIDv0: ${{ steps.upload.outputs.cid }}
            CIDv1: ${{ steps.convert_cidv0.outputs.cidv1 }}


            *If you use custom IPFS gateways, you should note the following:

            **Warning**:
              - The app only works securely when accessed via a IPFS gateway with [subdomain access](https://docs.ipfs.tech/concepts/ipfs-gateway/#subdomain).
              - The app is not interoperable across different domains!*


            ${{ needs.tag.outputs.changelog }}
